tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.2/types.yaml
  - http://www.getcloudify.org/spec/utilities-plugin/1.4.4/plugin.yaml
  - http://www.getcloudify.org/spec/azure-plugin/1.5.1/plugin.yaml

inputs:

  webserver_port:
    description: The external web server port
    default: 8080

  image:
    default:
      publisher: Canonical
      offer: UbuntuServer
      sku: 14.04.5-LTS
      version: latest

  size:
    default: Standard_A0

  resource_prefix:
    default: hw

  resource_suffix:
    default: '0'

  retry_after:
    type: integer
    default: 60

  location:
    default: { get_secret: azure_location }

  agent_user:
    description: The user name of the agent on the instance created from the image.
    default: ubuntu

  agent_key_public:
    default: { get_secret: agent_key_public }

  agent_key_private:
    default: { get_secret: agent_key_private }

  ssh_public_keys:
    description: the public key
    default:
    - path: {concat:[ '/home/', { get_input: agent_user }, '/.ssh/authorized_keys' ]}
      keyData: { get_input: agent_key_public }

  manager_network:
    default: external

dsl_definitions:

  azure_config: &azure_config
    subscription_id: { get_secret: azure_subscription_id }
    tenant_id: { get_secret: azure_tenant_id }
    client_id: { get_secret: azure_client_id }
    client_secret: { get_secret: azure_client_secret }

node_templates:

  http_web_server:
    type: cloudify.nodes.WebServer
    properties:
      port: { get_input: webserver_port }
    relationships:
    - type: cloudify.relationships.contained_in
      target: host
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/configure.sh
        start: scripts/start.sh
        stop: scripts/stop.sh

  host:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      os_family: linux
      azure_config: *azure_config
      resource_config:
        hardwareProfile:
          vmSize: { get_input: size }
        storageProfile:
          imageReference: { get_input: image}
        osProfile:
          adminUsername: { get_input: agent_user }
          adminPassword: ''
          linuxConfiguration:
            ssh:
              publicKeys: { get_input: ssh_public_keys }
            disablePasswordAuthentication: true
      agent_config:
        network: { get_input: manager_network }
        user: { get_input: agent_user }
        install_method: init_script
        port: 22
        key: { get_input: agent_key_private }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.connected_to_storage_account
      target: storage_account
    - type: cloudify.azure.relationships.connected_to_availability_set
      target: availability_set
    - type: cloudify.azure.relationships.connected_to_nic
      target: host_nic

  host_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.nic_connected_to_network_security_group
      target: network_security_group
    - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
      target: host_nic_ip_cfg

  host_nic_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
    - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
      target: subnet
    - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
      target: ip
    - type: cloudify.relationships.contained_in
      target: azure

  network_security_group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      name: {concat:[{get_input: resource_prefix},nsg,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        securityRules:
        - name: {concat:[{get_input: resource_prefix},nsg,{get_input: resource_suffix},ssh]}
          properties:
            description: SSH access
            protocol: Tcp
            sourcePortRange: '*'
            destinationPortRange: 22
            sourceAddressPrefix: '*'
            destinationAddressPrefix: '*'
            priority: 102
            access: Allow
            direction: Inbound
        - name: hw_http
          properties:
            description: HTTP access
            protocol: Tcp
            sourcePortRange: '*'
            destinationPortRange: { get_input: webserver_port }
            sourceAddressPrefix: '*'
            destinationAddressPrefix: '*'
            priority: 103
            access: Allow
            direction: Inbound
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  ip:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  availability_set:
    type: cloudify.azure.nodes.compute.AvailabilitySet
    properties:
      name: {concat:[{get_input: resource_prefix},availset,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  storage_account:
    type: cloudify.azure.nodes.storage.StorageAccount
    properties:
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        accountType: Standard_LRS
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      resource_group_name: { get_attribute: [ azure, deployment, outputs, resource_group ] }
      name: { get_attribute: [ azure, deployment, outputs, public_subnet ] }
      azure_config: *azure_config
      use_external_resource: true
      location: { get_attribute: [ azure, deployment, outputs, location ] }
    relationships:
    - type: cloudify.azure.relationships.contained_in_virtual_network
      target: virtual_network

  virtual_network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      resource_group_name: { get_attribute: [ azure, deployment, outputs, resource_group ] }
      name: { get_attribute: [ azure, deployment, outputs, virtual_network ] }
      azure_config: *azure_config
      use_external_resource: true
      location: { get_attribute: [ azure, deployment, outputs, location ] }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      name: { get_attribute: [ azure, deployment, outputs, resource_group ] }
      use_external_resource: true
      location: { get_attribute: [ azure, deployment, outputs, location ] }
      azure_config: *azure_config
    relationships:
    - type: cloudify.relationships.contained_in
      target: azure

  azure:
    type: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        blueprint:
          id: azure-example-network
          blueprint_archive: https://github.com/cloudify-examples/azure-example-network/archive/master.zip
          main_file_name: simple-blueprint.yaml
          external_resource: external
        deployment:
          id: azure-example-network
          outputs:
            resource_group: resource_group
            virtual_network: virtual_network
            public_subnet: public_subnet
            location: location
          external_resource: external
        reexecute: false

outputs:

  endpoint:
    description: Web application endpoint
    value:
      concat:
      - 'http://'
      - { get_attribute: [ host, public_ip ] }
      - ':'
      - { get_input: webserver_port }
      - '/'
